{
	"info": {
		"_postman_id": "ba593c2e-8932-4aee-a9d8-04ee2ad04b8a",
		"name": "Back End Assessment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20000859",
		"_collection_link": "https://gold-capsule-302232.postman.co/workspace/Benin-ESF-Integration-testing~c48ed830-a7f3-4cb9-a95e-f07f26fa575d/collection/20000859-ba593c2e-8932-4aee-a9d8-04ee2ad04b8a?action=share&source=collection_link&creator=20000859"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('token');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"newuser3@example.com\",\r\n  \"password\": \"securepassword123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Invalid email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login failed with invalid credentials\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('message');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"newuser289@example.com\",\r\n  \"password\": \"securepassword123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Invalid Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login failed with invalid password\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('message', 'Invalid credentials');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"newuser@example.com\",\r\n  \"password\": \"securepassword12367\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"User registered successfully\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('message', 'User registered successfully');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"newuser8\",\r\n  \"email\": \"newuser8@example.com\",\r\n  \"password\": \"securepassword123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Already Existing User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration failed - User already exists\", function () {\r",
									"    pm.response.to.have.status(409); // Expecting 409 Conflict\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('message', 'User already exists');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"newuser5\",\r\n  \"email\": \"newuser5@example.com\",\r\n  \"password\": \"securepassword123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration failed - Missing fields\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.property('message', 'All fields are required');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"\",\r\n  \"email\": \"newuser3@example.com\",\r\n  \"password\": \"securepassword123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}